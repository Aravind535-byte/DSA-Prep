class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int>v;
        int cnt1=0,cnt2=0,elt1=INT_MIN,elt2=INT_MIN,n=nums.size();
        for(int i=0;i<n;i++){

            if(cnt1==0 && elt2!=nums[i]){
                cnt1++;
                elt1=nums[i];
            }
            else if(cnt2==0 && elt1!=nums[i]){
                cnt2++;
                elt2=nums[i];
            }
            else if(nums[i]==elt1){
                cnt1++;
            }
            else if(nums[i]==elt2){
                cnt2++;
            }
            else{
                cnt1--;
                cnt2--;
            }
        }
        cnt1=0,cnt2=0;
        for(int i=0;i<n;i++){
            if(nums[i]==elt1){
                cnt1++;
            }
            if(nums[i]==elt2){
                cnt2++;
            }
        }
        if(cnt1> n/3){
            v.push_back(elt1);
        }
        if(cnt2> n/3){
            v.push_back(elt2);
        }
        return v;
        // vector<int> vectorOfCondition;int k=nums.size()/3;
        // unordered_map<int,int> mapOfCount;
        // for(auto value : nums){
        //     mapOfCount[value]++;
        // }
        // for(auto it : mapOfCount){
        //     if(vectorOfCondition.size()>=2) break;
        //     if(it.second>k){
        //         vectorOfCondition.push_back(it.first);
        //     }
        // }
        // return vectorOfCondition;
    }
};
